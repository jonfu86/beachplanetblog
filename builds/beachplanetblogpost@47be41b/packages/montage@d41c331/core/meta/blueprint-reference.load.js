montageDefine("d41c331","core/meta/blueprint-reference",{dependencies:["../promise","./blueprint","./binder","./remote-reference","./binder-reference","../logger","./module-blueprint"],factory:function(e,t){"use strict";var n=e("../promise").Promise,i=e("./blueprint"),r=e("./binder"),a=e("./remote-reference").RemoteReference,s=e("./binder-reference").BinderReference;e("../logger").logger("blueprint"),t.BlueprintReference=a.specialize({constructor:{value:function(){this.superForValue("constructor")()}},identifier:{get:function(){return this._reference||(this._reference=this.referenceFromValue(this._value)),["blueprint",(this._reference.blueprintName||"unnamed").toLowerCase(),"reference"].join("_")}},valueFromReference:{value:function(t){var a=t.blueprintModule,o=t.binderReference,l=n.resolve(r.Binder.manager.defaultBinder);return o&&(l=s.valueFromReference(o,e)),l.then(function(t){if(t){var n=e("./module-blueprint");return n.ModuleBlueprint.getBlueprintWithModuleId(a.id,a.require).then(function(e){if(e)return t.addBlueprint(e),e;throw Error("Error cannot find Blueprint "+a)})}return i.Blueprint.getBlueprintWithModuleId(a,e)})}},referenceFromValue:{value:function(e){var t={};return t.blueprintName=e.name,t.blueprintModule=e.blueprintInstanceModule,e.binder&&!e.binder.isDefault&&(t.binderReference=s.referenceFromValue(e.binder)),t}}})}});